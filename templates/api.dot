module AWS.{{= it.mod }} exposing (..)

{-| {{= it.documentation }}

## Table of Contents

* [Operations](#operations){{? it.unionNames.length }}
* [Union Types](#union-types){{?}}{{? it.recordNames.length }}
* [Record Types](#record-types){{?}}

## Operations

{{~ it.operationNames :name }}* [{{= name }}](#{{= name }})
{{~}}

@docs {{= it.operationNames.join(',') }}

{{? it.unionNames.length }}## Union Types

{{~ it.unionNames :name }}* [{{= name }}](#{{= name }})
{{~}}

@docs {{= it.unionNames.join(',') }}
{{?}}

{{? it.recordNames.length }}## Record Types

{{~ it.recordNames :name }}* [{{= name }}](#{{= name }})
{{~}}

@docs {{= it.recordNames.join(',') }}
{{?}}
-}

-- OPERATIONS
{{~ it.operations :op }}

{-| {{= op.documentation }}
-}
{{= op.funcName }} : String
{{= op.funcName }} =
    "{{= op.funcName }}"
{{~}}

-- RECORDS
{{~ it.records :t }}

{-| {{= t.documentation }}
-}
type alias {{= t.shapeName }} = String
{{~}}

-- UNIONS
{{~ it.unions :t }}

{-| {{= t.documentation }}
-}
type {{= t.shapeName }}
    = {{= t.enum.join('\n    | ') }}
{{~}}
