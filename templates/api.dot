module AWS.Services.{{= it.mod }}
    exposing
        ( config
        , {{= it.operationNames.join('\n        , ')}}
        , {{= it.types.filter(t => t.exposeAs).map(t => t.exposeAs).join('\n        , ')}}
        )

{-| {{= it.documentation }}

@docs config

## Table of Contents

* [Operations](#operations){{~ it.categories :c }}
* [{{= c.name }}](#{{= c.name.toLowerCase() }}){{~}}

## Operations

{{~ it.operationNames :name }}* [{{= name }}](#{{= name }})
{{~}}

@docs {{= it.operationNames.join(',') }}
{{~ it.categories :c }}
## {{= c.name }}

{{~ c.types.filter(t => t.exposeAs).map(t => t.type) :t }}* [{{= t }}](#{{= t }})
{{~}}

@docs {{= c.types.filter(t => t.exposeAs).map(t => t.type).join(',') }}
{{~}}
-}

import AWS
import AWS.Config
import AWS.Http
import AWS.Util
import Json.Decode as JD
import Json.Decode.Pipeline as JDP
import Json.Encode as JE
{{~ it.extraImports :importExtra }}{{= importExtra }}
{{~}}

{-| Configuration for this service
-}
config : Maybe AWS.Credentials -> AWS.ServiceConfig
config maybeCreds =
    AWS.Config.Service
        "{{= it.metadata.endpointPrefix }}"
        "{{= it.metadata.apiVersion }}"
        "{{= it.metadata.jsonVersion }}"
        "AWS{{= it.metadata.endpointPrefix.toUpperCase() }}_{{= it.metadata.apiVersion.replace(/-/g, '') }}."
        "{{= it.metadata.endpointPrefix }}.amazonaws.com"
        "us-east-1"
        (maybeCreds |> Maybe.map AWS.Util.toConfigCreds)
        |> AWS.ServiceConfig



-- OPERATIONS

{{= it.operations.join('\n\n') }}

{{~ it.types.filter(t => t.exposeAs) :t }}
{{= t.typeDef }}

{{? t.decoderDef }}
{{= t.decoderDef }}
{{?}}
{{~}}
